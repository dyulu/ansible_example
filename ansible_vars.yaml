---

# read -r PASSWORD
# ansible-playbook ansible_vars.yaml -i ansible_inventory.ini --extra-vars "ansible_password=$PASSWORD" --limit Host_Group_2
# Check syntax only:
# ansible-playbook ansible_vars.yaml -i ansible_inventory.ini --extra-vars "ansible_password=$PASSWORD" --limit Host_Group_2 --syntax-check
# Dry run:
# ansible-playbook ansible_vars.yaml -C -i ansible_inventory.ini --extra-vars "ansible_password=$PASSWORD" --limit Host_Group_2
- name: Use of variables
  hosts: all
  vars:
    # dict variable
    play_users_dict:
      Jane:
        user_name: jane
        user_home: /home/jane
        user_state: present
      Doe:
        user_name: doe
        user_home: /home/doe
        user_state: absent
    # List variable
    play_users_list1:
      - jerry
      - joe
      - john
    play_users_list2: [jerry, joe, john]

  tasks:
    - name: Make sure users present/absent
      user:
        name: "{{ item.value.user_name }}"
        home: "{{ item.value.user_home }}"
        state: "{{ item.value.user_state }}"
      loop: "{{ lookup('dict', play_users_dict) }}"

    - name: List users
      shell: "cat /etc/passwd | cut -d: -f1"
      register: all_users

    - debug:
        msg:
          - All users: "{{ all_users }}"

    - name: Remove users created
      user:
        name: "{{ item.value.user_name }}"
        remove: yes
        state: absent
      loop: "{{ lookup('dict', play_users_dict) }}"
      when: item.value.user_state == "present"

    - name: Create users in the list
      user:
        name: "{{ item }}"
        state: present
      loop: "{{ play_users_list1 }}"
      notify: report changed

    - name: Delete users in the list
      user:
        name: "{{ item }}"
        state: absent
      loop: "{{ play_users_list2 }}"

  handlers:
    - name: report changed
      debug:
        msg: Users {{ play_users_list1 }} created

